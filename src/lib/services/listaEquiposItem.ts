// ===================================================
// üìÅ Archivo: listaEquiposItem.ts
// üìå Ubicaci√≥n: src/lib/services
// üîß Descripci√≥n: Servicios para los √≠tems de la ListaEquipos
// ===================================================

import { ListaEquiposItem, ListaEquiposItemPayload } from '@/types'

const BASE_URL = '/api/lista-equipos-item'

// üü° Obtener todos los √≠tems
export async function getListaEquiposItems(): Promise<ListaEquiposItem[]> {
  try {
    const res = await fetch(BASE_URL)
    if (!res.ok) throw new Error('Error al obtener √≠tems de lista de equipos')
    return res.json()
  } catch (error) {
    console.error('‚ùå getListaEquiposItems:', error)
    return []
  }
}

// üü° Obtener un √≠tem por ID
export async function getListaEquiposItemById(id: string): Promise<ListaEquiposItem | null> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`)
    if (!res.ok) throw new Error('Error al obtener √≠tem de lista de equipos')
    return res.json()
  } catch (error) {
    console.error('‚ùå getListaEquiposItemById:', error)
    return null
  }
}

// üü¢ Crear √≠tem manualmente
export async function createListaEquiposItem(
  payload: ListaEquiposItemPayload
): Promise<ListaEquiposItem | null> {
  try {
    const res = await fetch(BASE_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    })
    if (!res.ok) throw new Error('Error al crear √≠tem de lista de equipos')
    return res.json()
  } catch (error) {
    console.error('‚ùå createListaEquiposItem:', error)
    return null
  }
}

// üü¢ Actualizar √≠tem (edici√≥n inline)
export async function updateListaEquiposItem(
  id: string,
  payload: Partial<ListaEquiposItemPayload>
): Promise<ListaEquiposItem | null> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    })
    if (!res.ok) throw new Error('Error al actualizar √≠tem de lista de equipos')
    return res.json()
  } catch (error) {
    console.error('‚ùå updateListaEquiposItem:', error)
    return null
  }
}

// üî¥ Eliminar √≠tem
export async function deleteListaEquiposItem(id: string): Promise<boolean> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`, { method: 'DELETE' })
    return res.ok
  } catch (error) {
    console.error('‚ùå deleteListaEquiposItem:', error)
    return false
  }
}

// üîÅ Crear √≠tem desde ProyectoEquipoItem
export async function createListaEquiposItemFromProyecto(
  listaId: string,
  proyectoEquipoItemId: string
): Promise<void> {
  try {
    const res = await fetch(`/api/lista-equipos/item-from-proyecto`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ listaId, proyectoEquipoItemId }),
    })
    if (!res.ok) throw new Error('Error al crear √≠tem desde ProyectoEquipoItem')
  } catch (error) {
    console.error('‚ùå createListaEquiposItemFromProyecto:', error)
    throw error
  }
}
