// ===================================================
// üìÅ Archivo: plantillaServicio.ts
// üìå Ubicaci√≥n: src/lib/services/plantillaServicio.ts
// üîß Descripci√≥n: Funciones para manejar PlantillaServicio desde el cliente
//
// üß† Uso: Consumido por formularios, listas y componentes relacionados a secciones de servicios
// ‚úçÔ∏è Autor: Jes√∫s Artemio
// üìÖ √öltima actualizaci√≥n: 2025-04-21
// ===================================================

import type { PlantillaServicio, PlantillaServicioPayload, PlantillaServicioUpdatePayload } from '@/types'

const BASE_URL = '/api/plantilla-servicio'

// ‚úÖ Obtener todos los servicios de plantilla
export async function getPlantillaServicios(): Promise<PlantillaServicio[]> {
  const res = await fetch(BASE_URL)
  if (!res.ok) throw new Error('Error al obtener servicios de plantilla')
  return res.json()
}

// ‚úÖ Obtener uno por ID (si lo necesitas)
export async function getPlantillaServicioById(id: string): Promise<PlantillaServicio> {
  const res = await fetch(`${BASE_URL}/${id}`)
  if (!res.ok) throw new Error('Error al obtener plantillaServicio por ID')
  return res.json()
}

// ‚úÖ Crear nueva secci√≥n de servicios
export async function createPlantillaServicio(payload: PlantillaServicioPayload): Promise<PlantillaServicio> {
  const res = await fetch(BASE_URL, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(payload)
  })
  if (!res.ok) throw new Error('Error al crear secci√≥n de servicios')
  return res.json()
}

// ‚úÖ Actualizar secci√≥n
export async function updatePlantillaServicio(id: string, payload: PlantillaServicioUpdatePayload): Promise<PlantillaServicio> {
  const res = await fetch(`${BASE_URL}/${id}`, {
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(payload)
  })
  if (!res.ok) throw new Error('Error al actualizar secci√≥n de servicios')
  return res.json()
}

// ‚úÖ Eliminar secci√≥n
export async function deletePlantillaServicio(id: string): Promise<void> {
  const res = await fetch(`${BASE_URL}/${id}`, {
    method: 'DELETE'
  })
  if (!res.ok) throw new Error('Error al eliminar secci√≥n de servicios')
}
