// ===================================================
// üìÅ Archivo: listaEquipo.ts
// üìå Ubicaci√≥n: src/lib/services
// üîß Descripci√≥n: Servicios para la entidad ListaEquipo
// üß† Uso: Consumido por formularios, p√°ginas y componentes
// ‚úçÔ∏è Autor: Jes√∫s Artemio (Master Experto üßô‚Äç‚ôÇÔ∏è)
// üìÖ √öltima actualizaci√≥n: 2025-05-18
// ===================================================

import { ListaEquipo, ListaEquipoPayload, ListaEquipoUpdatePayload } from '@/types'

const BASE_URL = '/api/lista-equipo'

// ‚úÖ Obtener todas las listas t√©cnicas por proyecto
export async function getListaEquipo(proyectoId: string): Promise<ListaEquipo[]> {
  try {
    const res = await fetch(`${BASE_URL}?proyectoId=${proyectoId}`)
    if (!res.ok) throw new Error('Error al obtener listas t√©cnicas')
    return await res.json()
  } catch (error) {
    console.error('getListaEquipo:', error)
    return []
  }
}

// ‚úÖ Obtener una lista t√©cnica por ID
export async function getListaEquipoById(id: string): Promise<ListaEquipo | null> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`)
    if (!res.ok) throw new Error('Error al obtener lista de equipos')
    return await res.json()
  } catch (error) {
    console.error('getListaEquipoById:', error)
    return null
  }
}

// ‚úÖ Crear una nueva lista t√©cnica
export async function createListaEquipo(payload: ListaEquipoPayload): Promise<ListaEquipo | null> {
  try {
    const res = await fetch(BASE_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    })
    if (!res.ok) throw new Error('Error al crear lista de equipos')
    return await res.json()
  } catch (error) {
    console.error('createListaEquipo:', error)
    return null
  }
}

// ‚úÖ Actualizar lista t√©cnica
export async function updateListaEquipo(id: string, payload: ListaEquipoUpdatePayload): Promise<ListaEquipo | null> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    })
    if (!res.ok) throw new Error('Error al actualizar lista de equipos')
    return await res.json()
  } catch (error) {
    console.error('updateListaEquipo:', error)
    return null
  }
}

// ‚úÖ Eliminar lista t√©cnica
export async function deleteListaEquipo(id: string): Promise<boolean> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`, { method: 'DELETE' })
    return res.ok
  } catch (error) {
    console.error('deleteListaEquipo:', error)
    return false
  }
}

// ‚úÖ Crear lista desde equipos t√©cnicos aprobados
export async function createListaDesdeEquiposCotizados(proyectoId: string): Promise<ListaEquipo | null> {
  try {
    const res = await fetch(`/api/lista-equipo/from-proyecto/${proyectoId}`, {
      method: 'POST',
    })
    if (!res.ok) throw new Error('Error al crear lista desde equipos t√©cnicos')
    return await res.json()
  } catch (error) {
    console.error('createListaDesdeEquiposCotizados:', error)
    return null
  }
}

// ‚úÖ Enviar lista a revisi√≥n t√©cnica
export async function enviarListaARevision(listaId: string): Promise<boolean> {
  try {
    const res = await fetch(`/api/lista-equipo/enviar/${listaId}`, {
      method: 'POST',
    })
    return res.ok
  } catch (error) {
    console.error('enviarListaARevision:', error)
    return false
  }
}

// ‚úÖ Avanzar estado de la lista t√©cnica
export async function updateListaEstado(id: string, nuevoEstado: string): Promise<ListaEquipo | null> {
  try {
    const res = await fetch(`/api/lista-equipo/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ estado: nuevoEstado }),
    })
    if (!res.ok) throw new Error('Error al cambiar el estado de la lista')
    return await res.json()
  } catch (error) {
    console.error('updateListaEstado:', error)
    return null
  }
}
