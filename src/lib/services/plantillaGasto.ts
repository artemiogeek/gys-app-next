// ===================================================
// üìÅ Archivo: plantillaGasto.ts
// üìå Ubicaci√≥n: src/lib/services/plantillaGasto.ts
// üîß Descripci√≥n: Funciones para manejar PlantillaGasto desde el cliente
//
// üß† Uso: Usado en p√°ginas y componentes que gestionan secciones de gastos
// ‚úçÔ∏è Autor: Jes√∫s Artemio
// üìÖ √öltima actualizaci√≥n: 2025-05-05
// ===================================================

import type { PlantillaGasto, PlantillaGastoPayload, PlantillaGastoUpdatePayload } from '@/types'

const BASE_URL = '/api/plantilla-gasto'

// ‚úÖ Obtener todas las secciones de gasto
export async function getPlantillaGastos(): Promise<PlantillaGasto[]> {
  try {
    const res = await fetch(BASE_URL)
    if (!res.ok) throw new Error('Error al obtener secciones de gasto')
    return await res.json()
  } catch (error) {
    console.error(error)
    return []
  }
}

// ‚úÖ Obtener secci√≥n por ID
export async function getPlantillaGastoById(id: string): Promise<PlantillaGasto | null> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`)
    if (!res.ok) throw new Error('Error al obtener secci√≥n de gasto por ID')
    return await res.json()
  } catch (error) {
    console.error(error)
    return null
  }
}

// ‚úÖ Crear secci√≥n
export async function createPlantillaGasto(payload: PlantillaGastoPayload): Promise<PlantillaGasto | null> {
  try {
    const res = await fetch(BASE_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    })
    if (!res.ok) throw new Error('Error al crear secci√≥n de gasto')
    return await res.json()
  } catch (error) {
    console.error(error)
    return null
  }
}

// ‚úÖ Actualizar secci√≥n
export async function updatePlantillaGasto(id: string, payload: PlantillaGastoUpdatePayload): Promise<PlantillaGasto | null> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    })
    if (!res.ok) throw new Error('Error al actualizar secci√≥n de gasto')
    return await res.json()
  } catch (error) {
    console.error(error)
    return null
  }
}

// ‚úÖ Eliminar secci√≥n
export async function deletePlantillaGasto(id: string): Promise<boolean> {
  try {
    const res = await fetch(`${BASE_URL}/${id}`, { method: 'DELETE' })
    if (!res.ok) throw new Error('Error al eliminar secci√≥n de gasto')
    return true
  } catch (error) {
    console.error(error)
    return false
  }
}
