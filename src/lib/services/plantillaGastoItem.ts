// ===================================================
// üìÅ Archivo: plantillaGastoItem.ts
// üìå Ubicaci√≥n: src/lib/services/plantillaGastoItem.ts
// üîß Descripci√≥n: Funciones para manejar √≠tems de gasto desde el cliente
//
// üß† Uso: Usado en p√°ginas y componentes que gestionan √≠tems dentro de PlantillaGasto
// ‚úçÔ∏è Autor: Jes√∫s Artemio
// üìÖ √öltima actualizaci√≥n: 2025-05-05
// ===================================================

import type {
    PlantillaGastoItem,
    PlantillaGastoItemPayload,
    PlantillaGastoItemUpdatePayload
  } from '@/types'
  
  const BASE_URL = '/api/plantilla-gasto-item'
  
  // ‚úÖ Obtener todos los √≠tems de gasto
  export async function getPlantillaGastoItems(): Promise<PlantillaGastoItem[]> {
    try {
      const res = await fetch(BASE_URL)
      if (!res.ok) throw new Error('Error al obtener √≠tems de gasto')
      return await res.json()
    } catch (error) {
      console.error(error)
      return []
    }
  }
  
  // ‚úÖ Obtener √≠tem por ID
  export async function getPlantillaGastoItemById(id: string): Promise<PlantillaGastoItem | null> {
    try {
      const res = await fetch(`${BASE_URL}/${id}`)
      if (!res.ok) throw new Error('Error al obtener √≠tem de gasto por ID')
      return await res.json()
    } catch (error) {
      console.error(error)
      return null
    }
  }
  
  // ‚úÖ Crear √≠tem
  export async function createPlantillaGastoItem(payload: PlantillaGastoItemPayload): Promise<PlantillaGastoItem | null> {
    try {
      const res = await fetch(BASE_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      })
      if (!res.ok) throw new Error('Error al crear √≠tem de gasto')
      return await res.json()
    } catch (error) {
      console.error(error)
      return null
    }
  }
  
  // ‚úÖ Actualizar √≠tem
  export async function updatePlantillaGastoItem(id: string, payload: PlantillaGastoItemUpdatePayload): Promise<PlantillaGastoItem | null> {
    try {
      const res = await fetch(`${BASE_URL}/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      })
      if (!res.ok) throw new Error('Error al actualizar √≠tem de gasto')
      return await res.json()
    } catch (error) {
      console.error(error)
      return null
    }
  }
  
  // ‚úÖ Eliminar √≠tem
  export async function deletePlantillaGastoItem(id: string): Promise<boolean> {
    try {
      const res = await fetch(`${BASE_URL}/${id}`, { method: 'DELETE' })
      if (!res.ok) throw new Error('Error al eliminar √≠tem de gasto')
      return true
    } catch (error) {
      console.error(error)
      return false
    }
  }
  
