// ===================================================
// üìÅ Archivo: [id]/route.ts
// üìå Ubicaci√≥n: src/app/api/categoria-servicio/[id]/
// üîß API REST para obtener, actualizar o eliminar categor√≠a de servicio
// ===================================================

import { prisma } from '@/lib/prisma'
import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

// üîç GET
export async function GET(_req: NextRequest, context: { params: { id: string } }) {
  const id = context.params.id

  try {
    const data = await prisma.categoriaServicio.findUnique({
      where: { id },
      include: { servicios: true },
    })
    return NextResponse.json(data)
  } catch (error) {
    console.error('‚ùå Error en GET /categoria-servicio/[id]:', error)
    return NextResponse.json({ error: 'Error al obtener categor√≠a' }, { status: 500 })
  }
}

// ‚úèÔ∏è PUT
export async function PUT(req: NextRequest, context: { params: { id: string } }) {
  const id = context.params.id

  try {
    const body = await req.json()
    const data = await prisma.categoriaServicio.update({
      where: { id },
      data: { nombre: body.nombre },
    })
    return NextResponse.json(data)
  } catch (error) {
    console.error('‚ùå Error en PUT /categoria-servicio/[id]:', error)
    return NextResponse.json({ error: 'Error al actualizar categor√≠a' }, { status: 500 })
  }
}

// üóëÔ∏è DELETE
// ‚úÖ Forma correcta
export async function DELETE(request: Request, context: { params: { id: string } }) {
  const { id } = context.params
  try {
    const existente = await prisma.categoriaServicio.findUnique({ where: { id } })
    if (!existente) {
      console.warn('‚ö†Ô∏è Categor√≠a ya fue eliminada o no existe:', id)
      return NextResponse.json({ error: 'No encontrada' }, { status: 404 })
    }

    const data = await prisma.categoriaServicio.delete({ where: { id } })
    return NextResponse.json(data)

  } catch (error) {
    console.error('‚ùå Error en DELETE /categoria-servicio/[id]:', error)
    return NextResponse.json({ error: 'Error al eliminar categor√≠a' }, { status: 500 })
  }
}
